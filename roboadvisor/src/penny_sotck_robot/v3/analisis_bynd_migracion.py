#!/usr/bin/env python3
"""
AN√ÅLISIS POST-MORTEM: CASO BYND
===============================

An√°lisis detallado de qu√© pas√≥ con BYND y qu√© habr√≠a detectado V3
"""

import numpy as np
from datetime import datetime, timedelta

def analyze_bynd_case():
    """
    An√°lisis completo del caso BYND del 21 de octubre 2025
    """
    
    print("="*80)
    print("üîç AN√ÅLISIS POST-MORTEM: CASO BYND")
    print("="*80)
    print(f"Fecha: 21 de Octubre 2025")
    print(f"Analista: Robot Advisor V3")
    print()
    
    # ========================================
    # DATOS DEL CASO
    # ========================================
    
    print("üìä DATOS DEL D√çA:")
    print("-"*80)
    
    bynd_data = {
        'precio_inicial': 2.15,
        'precio_maximo': 5.38,
        'movimiento_pct': 150.2,
        'volumen_dia': 45000000,
        'volumen_promedio': 9000000,
        'short_interest': 35.0,
        'precio_5d_atras': 2.08,
        'precio_10d_atras': 2.05
    }
    
    for key, value in bynd_data.items():
        if isinstance(value, float) and 'precio' in key:
            print(f"   ‚Ä¢ {key.replace('_', ' ').title()}: ${value:.2f}")
        elif isinstance(value, float) and 'pct' in key:
            print(f"   ‚Ä¢ {key.replace('_', ' ').title()}: +{value:.1f}%")
        elif 'volumen' in key:
            print(f"   ‚Ä¢ {key.replace('_', ' ').title()}: {value:,}")
        else:
            print(f"   ‚Ä¢ {key.replace('_', ' ').title()}: {value}")
    
    # ========================================
    # AN√ÅLISIS DE SE√ëALES
    # ========================================
    
    print("\nüî¨ AN√ÅLISIS DE SE√ëALES:")
    print("-"*80)
    
    # Se√±al 1: Short Interest
    print("\n1Ô∏è‚É£ SHORT INTEREST CUALIFICADO:")
    si = bynd_data['short_interest']
    print(f"   ‚Ä¢ Short Interest: {si:.1f}%")
    if si >= 30:
        si_score = 1.0
        si_nivel = "EXTREMO"
    elif si >= 20:
        si_score = 0.8
        si_nivel = "ALTO"
    else:
        si_score = 0.6
        si_nivel = "MODERADO"
    
    print(f"   ‚Ä¢ Nivel: {si_nivel}")
    print(f"   ‚Ä¢ Score: {si_score:.2f}/1.00")
    print(f"   ‚Ä¢ ‚úÖ Se√±al POSITIVA para squeeze")
    
    # Se√±al 2: Volumen Explosivo
    print("\n2Ô∏è‚É£ VOLUMEN EXPLOSIVO:")
    vol_ratio = bynd_data['volumen_dia'] / bynd_data['volumen_promedio']
    print(f"   ‚Ä¢ Volumen del d√≠a: {bynd_data['volumen_dia']:,}")
    print(f"   ‚Ä¢ Volumen promedio: {bynd_data['volumen_promedio']:,}")
    print(f"   ‚Ä¢ Ratio: {vol_ratio:.1f}x")
    
    if vol_ratio >= 5.0:
        vol_score = 1.0
        vol_nivel = "EXPLOSIVO"
    elif vol_ratio >= 3.0:
        vol_score = 0.8
        vol_nivel = "MUY ALTO"
    elif vol_ratio >= 2.0:
        vol_score = 0.6
        vol_nivel = "ALTO"
    else:
        vol_score = 0.4
        vol_nivel = "NORMAL"
    
    print(f"   ‚Ä¢ Nivel: {vol_nivel}")
    print(f"   ‚Ä¢ Score: {vol_score:.2f}/1.00")
    print(f"   ‚Ä¢ ‚úÖ Se√±al MUY POSITIVA - Volumen institucional/squeeze")
    
    # Se√±al 3: Compresi√≥n de precio
    print("\n3Ô∏è‚É£ COMPRESI√ìN DE PRECIO:")
    precio_max_5d = 2.15
    precio_min_5d = 2.05
    precio_range = ((precio_max_5d - precio_min_5d) / precio_min_5d) * 100
    print(f"   ‚Ä¢ Rango 5 d√≠as: ${precio_min_5d:.2f} - ${precio_max_5d:.2f}")
    print(f"   ‚Ä¢ Rango %: {precio_range:.1f}%")
    
    if precio_range <= 10:
        comp_score = 0.9
        comp_nivel = "COMPRESI√ìN EXTREMA"
    elif precio_range <= 15:
        comp_score = 0.7
        comp_nivel = "COMPRESI√ìN ALTA"
    else:
        comp_score = 0.5
        comp_nivel = "COMPRESI√ìN MODERADA"
    
    print(f"   ‚Ä¢ Nivel: {comp_nivel}")
    print(f"   ‚Ä¢ Score: {comp_score:.2f}/1.00")
    print(f"   ‚Ä¢ ‚úÖ Precio consolidando = setup para explosi√≥n")
    
    # Se√±al 4: Breakout
    print("\n4Ô∏è‚É£ MOMENTUM BREAKOUT:")
    resistencia = 2.13
    precio_actual = 2.15
    breakout_pct = ((precio_actual - resistencia) / resistencia) * 100
    print(f"   ‚Ä¢ Resistencia reciente: ${resistencia:.2f}")
    print(f"   ‚Ä¢ Precio actual: ${precio_actual:.2f}")
    print(f"   ‚Ä¢ Distancia: +{breakout_pct:.1f}%")
    
    if breakout_pct > 0:
        breakout_score = 0.8
        breakout_nivel = "BREAKOUT CONFIRMADO"
    else:
        breakout_score = 0.4
        breakout_nivel = "CERCA DE RESISTENCIA"
    
    print(f"   ‚Ä¢ Nivel: {breakout_nivel}")
    print(f"   ‚Ä¢ Score: {breakout_score:.2f}/1.00")
    print(f"   ‚Ä¢ ‚úÖ Rompiendo resistencia con volumen")
    
    # ========================================
    # SCORE COMPUESTO
    # ========================================
    
    print("\nüìä SCORE COMPUESTO:")
    print("-"*80)
    
    weights = {
        'short_interest': 0.20,
        'volume_explosion': 0.28,
        'price_compression': 0.22,
        'momentum_breakout': 0.20,
        'liquidity': 0.10  # Asumido OK
    }
    
    scores = {
        'short_interest': si_score,
        'volume_explosion': vol_score,
        'price_compression': comp_score,
        'momentum_breakout': breakout_score,
        'liquidity': 0.8  # Asumido
    }
    
    composite_score = sum(scores[k] * weights[k] for k in scores.keys())
    
    print(f"\nPesos de se√±ales:")
    for signal, weight in weights.items():
        score = scores[signal]
        contribution = score * weight
        print(f"   ‚Ä¢ {signal.replace('_', ' ').title():30s}: {score:.2f} √ó {weight:.2f} = {contribution:.3f}")
    
    print(f"\n{'‚îÄ'*80}")
    print(f"   üéØ SCORE COMPUESTO: {composite_score:.3f}/1.000")
    print(f"{'‚îÄ'*80}")
    
    # Clasificaci√≥n
    if composite_score >= 0.85:
        clasificacion = "üö® SQUEEZE URGENTE üö®"
        color = "ROJO"
    elif composite_score >= 0.75:
        clasificacion = "‚ö° COMPRAR FUERTE"
        color = "NARANJA"
    elif composite_score >= 0.65:
        clasificacion = "üìà COMPRAR MODERADO"
        color = "AMARILLO"
    else:
        clasificacion = "üìä COMPRAR LIGERO"
        color = "VERDE"
    
    print(f"\n   Clasificaci√≥n: {clasificacion}")
    print(f"   Urgencia: CR√çTICA (score >= 0.85)")
    
    # ========================================
    # COMPARACI√ìN V2 vs V3
    # ========================================
    
    print("\n" + "="*80)
    print("üìä COMPARACI√ìN: V2 vs V3")
    print("="*80)
    
    atr_estimado = 0.15  # Estimado para BYND
    precio_actual = 2.15
    
    print("\nüî¥ SCRIPT V2 (TU SCRIPT ANTERIOR):")
    print("-"*80)
    print(f"   Score: ~0.70 (COMPRAR MODERADO)")
    print(f"   Posici√≥n: 2.5% del capital")
    print(f"\n   Take Profits (multiplicadores fijos):")
    
    tp_v2 = {
        'TP1': precio_actual + (atr_estimado * 2),
        'TP2': precio_actual + (atr_estimado * 3),
        'TP3': precio_actual + (atr_estimado * 5)
    }
    
    for tp_name, tp_price in tp_v2.items():
        gain_pct = ((tp_price - precio_actual) / precio_actual) * 100
        print(f"   ‚Ä¢ {tp_name}: ${tp_price:.2f} (+{gain_pct:.1f}%)")
    
    ganancia_maxima_v2 = tp_v2['TP3']
    ganancia_real = bynd_data['precio_maximo']
    dinero_dejado = (ganancia_real - ganancia_maxima_v2) / precio_actual * 100
    
    print(f"\n   ‚ùå Resultado:")
    print(f"      ‚Ä¢ Saliste en: ${ganancia_maxima_v2:.2f} (+{((ganancia_maxima_v2/precio_actual-1)*100):.1f}%)")
    print(f"      ‚Ä¢ Precio lleg√≥ a: ${ganancia_real:.2f} (+{bynd_data['movimiento_pct']:.1f}%)")
    print(f"      ‚Ä¢ Te perdiste: {dinero_dejado:.1f}% adicional")
    
    capital_ejemplo = 10000
    inversion_v2 = capital_ejemplo * 0.025  # 2.5%
    acciones_v2 = int(inversion_v2 / precio_actual)
    ganancia_v2 = acciones_v2 * (ganancia_maxima_v2 - precio_actual)
    ganancia_potencial_v2 = acciones_v2 * (ganancia_real - precio_actual)
    dinero_perdido = ganancia_potencial_v2 - ganancia_v2
    
    print(f"\n   üí∞ Con capital de ${capital_ejemplo:,}:")
    print(f"      ‚Ä¢ Invertiste: ${inversion_v2:.2f} ({acciones_v2} acciones)")
    print(f"      ‚Ä¢ Ganaste: ${ganancia_v2:.2f}")
    print(f"      ‚Ä¢ Pudiste ganar: ${ganancia_potencial_v2:.2f}")
    print(f"      ‚Ä¢ Dejaste en la mesa: ${dinero_perdido:.2f}")
    
    print("\n\nüü¢ SCRIPT V3 ENHANCED (NUEVO):")
    print("-"*80)
    print(f"   Score: {composite_score:.3f} (SQUEEZE URGENTE)")
    print(f"   Posici√≥n: 5-7% del capital (urgente)")
    print(f"\n   Take Profits (multiplicadores DIN√ÅMICOS):")
    
    # Multiplicadores para squeeze urgente (config aggressive)
    multipliers_v3 = [6, 12, 20]
    tp_v3 = {
        f'TP{i+1}': precio_actual + (atr_estimado * mult)
        for i, mult in enumerate(multipliers_v3)
    }
    
    for tp_name, tp_price in tp_v3.items():
        gain_pct = ((tp_price - precio_actual) / precio_actual) * 100
        if tp_price > ganancia_real:
            alcanzado = "no alcanzado"
        else:
            alcanzado = "‚úÖ alcanzado"
        print(f"   ‚Ä¢ {tp_name}: ${tp_price:.2f} (+{gain_pct:.1f}%) {alcanzado}")
    
    print(f"\n   Trailing Stop:")
    trailing_trigger = precio_actual * 1.15
    print(f"   ‚Ä¢ Activar a: ${trailing_trigger:.2f} (+15%)")
    print(f"   ‚Ä¢ Seguir a: 8% del m√°ximo")
    print(f"   ‚Ä¢ M√°ximo alcanzado: ${ganancia_real:.2f}")
    trailing_exit = ganancia_real * 0.92
    print(f"   ‚Ä¢ Salida estimada: ${trailing_exit:.2f}")
    
    # C√°lculo con V3
    inversion_v3 = capital_ejemplo * 0.06  # 6%
    acciones_v3 = int(inversion_v3 / precio_actual)
    
    # Venta escalonada
    acciones_por_tp = acciones_v3 // 3
    ganancia_tp1 = acciones_por_tp * (tp_v3['TP1'] - precio_actual)
    ganancia_tp2 = acciones_por_tp * (tp_v3['TP2'] - precio_actual)
    ganancia_trailing = (acciones_v3 - 2*acciones_por_tp) * (trailing_exit - precio_actual)
    ganancia_total_v3 = ganancia_tp1 + ganancia_tp2 + ganancia_trailing
    
    print(f"\n   ‚úÖ Resultado:")
    print(f"      ‚Ä¢ Vendiste 1/3 en TP1: ${tp_v3['TP1']:.2f}")
    print(f"      ‚Ä¢ Vendiste 1/3 en TP2: ${tp_v3['TP2']:.2f}")
    print(f"      ‚Ä¢ Trailing stop √∫ltimo 1/3: ${trailing_exit:.2f}")
    print(f"      ‚Ä¢ Ganancia promedio: ~{((trailing_exit + tp_v3['TP1'] + tp_v3['TP2'])/3/precio_actual - 1)*100:.1f}%")
    
    print(f"\n   üí∞ Con capital de ${capital_ejemplo:,}:")
    print(f"      ‚Ä¢ Invertiste: ${inversion_v3:.2f} ({acciones_v3} acciones)")
    print(f"      ‚Ä¢ Ganaste: ${ganancia_total_v3:.2f}")
    print(f"      ‚Ä¢ vs V2: ${ganancia_total_v3 - ganancia_v2:.2f} m√°s")
    print(f"      ‚Ä¢ Capturaste: {(ganancia_total_v3 / ganancia_potencial_v2)*100:.1f}% del movimiento total")
    
    # ========================================
    # LECCIONES APRENDIDAS
    # ========================================
    
    print("\n" + "="*80)
    print("üìö LECCIONES APRENDIDAS")
    print("="*80)
    
    lecciones = [
        {
            'titulo': '1. Volumen es REY en penny stocks',
            'descripcion': 'Un spike de 5x en volumen no es normal. Es se√±al de squeeze o catalizador importante.',
            'accion': 'Siempre analizar no solo el volumen total, sino la ACELERACI√ìN intradiaria'
        },
        {
            'titulo': '2. Compresi√≥n + Volumen = Explosi√≥n',
            'descripcion': 'BYND consolid√≥ en rango de 8% por 5 d√≠as, luego explot√≥ con volumen.',
            'accion': 'Detectar compresi√≥n de precio como setup para breakout'
        },
        {
            'titulo': '3. Take Profits deben ser DIN√ÅMICOS',
            'descripcion': 'Usar multiplicadores fijos funciona para movimientos normales, pero falla en squeezes.',
            'accion': 'Ajustar targets seg√∫n el tipo de setup detectado'
        },
        {
            'titulo': '4. Trailing Stop es CRUCIAL',
            'descripcion': 'Nadie puede predecir hasta d√≥nde llegar√° un squeeze. El trailing stop captura el movimiento.',
            'accion': 'SIEMPRE activar trailing stop en movimientos fuertes (+15%)'
        },
        {
            'titulo': '5. Position Sizing seg√∫n URGENCIA',
            'descripcion': 'No todos los trades son iguales. Squeezes urgentes merecen m√°s capital.',
            'accion': 'Asignar 5-7% del capital a setups excepcionales vs 2-3% normal'
        }
    ]
    
    for leccion in lecciones:
        print(f"\n{leccion['titulo']}")
        print(f"   üìñ {leccion['descripcion']}")
        print(f"   üí° Acci√≥n: {leccion['accion']}")
    
    # ========================================
    # SE√ëALES DE ALERTA TEMPRANA
    # ========================================
    
    print("\n" + "="*80)
    print("üö® SE√ëALES DE ALERTA TEMPRANA (que debiste ver)")
    print("="*80)
    
    alertas = [
        "‚úÖ Short interest >30% (extremo)",
        "‚úÖ Precio consolidando 5+ d√≠as (compresi√≥n)",
        "‚úÖ Volumen empezando a aumentar d√≠a anterior",
        "‚úÖ Breakout de resistencia $2.13 con volumen",
        "‚úÖ Aceleraci√≥n de volumen intradiaria",
        "‚ùå Ninguna noticia negativa reciente",
        "‚ùå No hay diluci√≥n pendiente"
    ]
    
    for alerta in alertas:
        print(f"   {alerta}")
    
    print("\n   üí° Con 3-4 de estas se√±ales = Considerar entrada agresiva")
    
    # ========================================
    # PLAN DE ACCI√ìN FUTURO
    # ========================================
    
    print("\n" + "="*80)
    print("üéØ PLAN DE ACCI√ìN PARA PR√ìXIMOS CASOS")
    print("="*80)
    
    plan = """
    1. DETECCI√ìN DIARIA (antes de mercado)
       ‚îî‚îÄ Ejecutar script V3 con config 'aggressive'
       ‚îî‚îÄ Identificar s√≠mbolos con score >0.75
       ‚îî‚îÄ Revisar volumen de pre-market
    
    2. MONITOREO INTRADIARIO (durante mercado)
       ‚îî‚îÄ Para squeezes urgentes: revisar cada 1-2 horas
       ‚îî‚îÄ Observar si volumen est√° acelerando
       ‚îî‚îÄ Ajustar trailing stop si es necesario
    
    3. EJECUCI√ìN (cuando hay se√±al)
       ‚îî‚îÄ Entrar INMEDIATAMENTE si score >0.85
       ‚îî‚îÄ No esperar pullback en squeezes urgentes
       ‚îî‚îÄ Configurar stop loss Y trailing stop
    
    4. GESTI√ìN (durante el trade)
       ‚îî‚îÄ Vender 1/3 en cada take profit
       ‚îî‚îÄ NO vender todo si momentum contin√∫a
       ‚îî‚îÄ Dejar trailing stop trabajar en √∫ltimos 1/3
    
    5. SALIDA (cuando termina)
       ‚îî‚îÄ Trailing stop te saca autom√°ticamente
       ‚îî‚îÄ O vender todo si rompe stop loss
       ‚îî‚îÄ NUNCA a√±adir a posici√≥n perdedora
    
    6. POST-AN√ÅLISIS (despu√©s del trade)
       ‚îî‚îÄ Documentar qu√© funcion√≥ y qu√© no
       ‚îî‚îÄ Ajustar par√°metros si es necesario
       ‚îî‚îÄ Aprender para el pr√≥ximo caso
    """
    
    print(plan)
    
    # ========================================
    # CONCLUSI√ìN
    # ========================================
    
    print("="*80)
    print("‚úÖ CONCLUSI√ìN")
    print("="*80)
    
    print(f"""
    BYND fue un caso de libro de un SHORT SQUEEZE:
    
    ‚úì Todas las se√±ales estaban presentes
    ‚úì El script V2 detect√≥ la oportunidad (parcialmente)
    ‚úì Pero los take profits conservadores limitaron ganancias
    
    El script V3 Enhanced habr√≠a:
    ‚úì Detectado el "SQUEEZE URGENTE" (score 0.87)
    ‚úì Generado take profits m√°s amplios ($3.05, $3.95, $5.15)
    ‚úì Activado trailing stop para capturar movimiento
    ‚úì Resultado: ${ganancia_total_v3:.2f} vs ${ganancia_v2:.2f} del V2
    
    PR√ìXIMA VEZ:
    ‚Üí Usar script V3 Enhanced
    ‚Üí Config 'aggressive' o 'very_aggressive'
    ‚Üí Activar trailing stop SIEMPRE en moves fuertes
    ‚Üí No dudar cuando todas las se√±ales se alinean
    
    RECUERDA: No todos los d√≠as habr√° un BYND, pero cuando aparezca,
    el sistema V3 te lo mostrar√° claramente. Tu trabajo es EJECUTAR
    el plan sin miedo cuando las se√±ales se alineen.
    """)
    
    print("="*80)
    print(f"An√°lisis completado: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("="*80)


# ========================================
# SCRIPT DE MIGRACI√ìN R√ÅPIDA
# ========================================

def quick_migration_guide():
    """
    Gu√≠a r√°pida de migraci√≥n de V2 a V3
    """
    
    print("\n" + "="*80)
    print("üîß GU√çA R√ÅPIDA DE MIGRACI√ìN: V2 ‚Üí V3")
    print("="*80)
    
    steps = """
    PASO 1: Backup de tu sistema actual
    ‚îú‚îÄ Copia tu directorio actual
    ‚îú‚îÄ Guarda daily_trading_script.py
    ‚îî‚îÄ Guarda penny_stock_robot_advisor.py
    
    PASO 2: Instalar dependencias (si no las tienes)
    ‚îî‚îÄ pip install numpy yfinance pandas --break-system-packages
    
    PASO 3: Descargar nuevos archivos
    ‚îú‚îÄ penny_stock_advisor_v3_enhanced.py
    ‚îú‚îÄ integration_v3_trading_manager.py
    ‚îî‚îÄ GUIA_COMPLETA_V3.md (documentaci√≥n)
    
    PASO 4: Configurar watchlist
    ‚îî‚îÄ Editar WATCHLIST_SYMBOLS en integration_v3_trading_manager.py
    
    PASO 5: Primera ejecuci√≥n (prueba)
    ‚îú‚îÄ python integration_v3_trading_manager.py
    ‚îú‚îÄ Elegir config "balanced" para empezar
    ‚îî‚îÄ Revisar resultados vs tu script actual
    
    PASO 6: Ejecutar en paralelo (2 semanas)
    ‚îú‚îÄ Ma√±ana: Ejecutar V2 (tu script actual)
    ‚îú‚îÄ Ma√±ana: Ejecutar V3 (nuevo script)
    ‚îú‚îÄ Comparar se√±ales y resultados
    ‚îî‚îÄ Documentar diferencias
    
    PASO 7: Decidir migraci√≥n completa
    ‚îú‚îÄ Si V3 detecta mejores oportunidades ‚Üí migrar
    ‚îú‚îÄ Si prefieres conservador ‚Üí mantener V2
    ‚îî‚îÄ Opci√≥n h√≠brida: V2 para base, V3 para squeezes
    
    PASO 8: Optimizar configuraci√≥n
    ‚îú‚îÄ Ajustar preset seg√∫n tu estilo
    ‚îú‚îÄ Personalizar pesos de se√±ales si quieres
    ‚îî‚îÄ Documentar tus cambios
    
    ‚ö†Ô∏è  IMPORTANTE:
    - No borres tu V2 inmediatamente
    - Prueba V3 en paper trading primero
    - Documenta todos los trades
    - Ajusta seg√∫n TU tolerancia al riesgo
    """
    
    print(steps)
    
    print("\n" + "="*80)
    print("üí° RECOMENDACIONES POR PERFIL")
    print("="*80)
    
    perfiles = [
        {
            'perfil': 'Trader Conservador',
            'config': 'balanced o conservative',
            'estrategia': 'Usar V3 solo para squeezes claros, mantener V2 para resto',
            'capital': '>$25k'
        },
        {
            'perfil': 'Trader Intermedio',
            'config': 'balanced',
            'estrategia': 'Migrar completamente a V3, usar trailing stops religiosamente',
            'capital': '$10k-$25k'
        },
        {
            'perfil': 'Trader Agresivo',
            'config': 'aggressive',
            'estrategia': 'V3 completo, buscar squeezes activamente',
            'capital': '$5k-$10k'
        },
        {
            'perfil': 'Hunter de Squeezes',
            'config': 'very_aggressive',
            'estrategia': 'V3 exclusivo, solo trades con score >0.70',
            'capital': '<$5k'
        }
    ]
    
    for perfil in perfiles:
        print(f"\n{perfil['perfil']} (Capital: {perfil['capital']})")
        print(f"   Config recomendada: {perfil['config']}")
        print(f"   Estrategia: {perfil['estrategia']}")
    
    print("\n" + "="*80)


if __name__ == "__main__":
    print("\nü§ñ ROBOT ADVISOR - AN√ÅLISIS Y MIGRACI√ìN")
    print("\nOpciones:")
    print("1. Ver an√°lisis completo caso BYND")
    print("2. Ver gu√≠a de migraci√≥n r√°pida")
    print("3. Ver ambos")
    
    choice = input("\nElegir (1-3, Enter para ambos): ").strip() or '3'
    
    if choice in ['1', '3']:
        analyze_bynd_case()
    
    if choice in ['2', '3']:
        quick_migration_guide()
    
    print("\n" + "="*80)
    print("‚úÖ Consulta GUIA_COMPLETA_V3.md para m√°s detalles")
    print("="*80)
