#!/usr/bin/env python3
"""
Script para verificar el estado del modelo ML
"""
import sys
import os
import pickle

sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'utils'))

model_path = "models/breakout_model.pkl"

print("="*70)
print("VERIFICACI√ìN DEL MODELO ML")
print("="*70)

if os.path.exists(model_path):
    print(f"\n‚úÖ Archivo existe: {model_path}")
    print(f"   Tama√±o: {os.path.getsize(model_path) / 1024 / 1024:.2f} MB")

    try:
        with open(model_path, 'rb') as f:
            data = pickle.load(f)

        print(f"\nüì¶ Contenido del archivo:")
        print(f"   ‚Ä¢ Claves: {list(data.keys())}")

        if 'model' in data:
            print(f"   ‚Ä¢ Modelo: {type(data['model'])}")
            print(f"   ‚Ä¢ Modelo es None: {data['model'] is None}")

        if 'is_trained' in data:
            print(f"   ‚Ä¢ is_trained: {data['is_trained']}")
        else:
            print(f"   ‚ö†Ô∏è  'is_trained' NO est√° en el archivo")

        if 'feature_names' in data:
            print(f"   ‚Ä¢ feature_names: {data['feature_names']}")

        # Verificar si el modelo puede hacer predicciones
        if data.get('model') is not None:
            print(f"\n‚úÖ El modelo existe y est√° cargado")
            print(f"   Tipo: {type(data['model']).__name__}")

            # Intentar hacer una predicci√≥n de prueba
            try:
                import numpy as np
                test_features = np.array([[0.07, 19.0, 3.0, 58, 0.004, 0.015, 0.16, 8, 1, 6.0]])
                prediction = data['model'].predict(test_features)
                proba = data['model'].predict_proba(test_features)
                print(f"   ‚úÖ Puede hacer predicciones")
                print(f"   Test predicci√≥n: {prediction[0]}, probabilidad: {proba[0][1]:.2%}")
            except Exception as e:
                print(f"   ‚ùå Error al hacer predicci√≥n: {e}")
        else:
            print(f"\n‚ùå El modelo es None")

    except Exception as e:
        print(f"\n‚ùå Error al leer el archivo: {e}")
        import traceback
        traceback.print_exc()
else:
    print(f"\n‚ùå Archivo NO existe: {model_path}")

print("\n" + "="*70)
